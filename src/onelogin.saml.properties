#  If 'strict' is True, then the Java Toolkit will reject unsigned
#  or unencrypted messages if it expects them signed or encrypted
#  Also will reject the messages if not strictly follow the SAML
onelogin.saml2.strict =  false

# Enable debug mode (to print errors)
onelogin.saml2.debug =  false


## Service Provider Data that we are deploying ##

#  Identifier of the SP entity  (must be a URI)
onelogin.saml2.sp.entityid = http://localhost:8080/saml/metadata.html

# Specifies info about where and how the <AuthnResponse> message MUST be
# returned to the requester, in this case our SP.
# URL Location where the <Response> from the IdP will be returned
onelogin.saml2.sp.assertion_consumer_service.url = http://localhost:8080/saml/consume.html

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-POST binding only
onelogin.saml2.sp.assertion_consumer_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST

# Specifies info about where and how the <Logout Response> message MUST be
# returned to the requester, in this case our SP.
onelogin.saml2.sp.single_logout_service.url = http://localhost:8080/saml/logout.html

# SAML protocol binding to be used when returning the <LogoutResponse> or sending the <LogoutRequest>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.sp.single_logout_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Specifies constraints on the name identifier to be used to
# represent the requested subject.
# Take a look on lib/Saml2/Constants.php to see the NameIdFormat supported
onelogin.saml2.sp.nameidformat = urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified

# Usually x509cert and privateKey of the SP are provided by files placed at
# the certs folder. But we can also provide them with the following parameters
##openssl req -new -x509 -days 365 -nodes -sha256 -out saml.crt -keyout saml.pem
onelogin.saml2.sp.x509cert =  -----BEGIN CERTIFICATE----- MIIDfTCCAmSgAwIBAgIBADANBgkqhkiG9w0BAQ0FADBYMQswCQYDVQQGEwJjYTENMAsGA1UECAwEdGVzdDENMAsGA1UECgwEdGVzdDENMAsGA1UEAwwEdGVzdDENMAsGA1UEBwwEdGVzdDENMAsGA1UECwwEdGVzdDAeFw0xNzA4MTgxOTQxMjhaFw0xODA4MTgxOTQxMjhaMFgxCzAJBgNVBAYTAmNhMQ0wCwYDVQQIDAR0ZXN0MQ0wCwYDVQQKDAR0ZXN0MQ0wCwYDVQQDDAR0ZXN0MQ0wCwYDVQQHDAR0ZXN0MQ0wCwYDVQQLDAR0ZXN0MIIBIzANBgkqhkiG9w0BAQEFAAOCARAAMIIBCwKCAQIAr0HjQJfmL23sZCdKRgfq4BXLKPMDv8tBxD1G0b8WglTVA3rDEJqdPKL8YPWNlSnMpklix4kj5U7j1JSQP2QGEwR9K/7Y4sEG3NglLNGgiTP8gC44KHyJTmRhO6CwwVWfE9nvMAg6WuD89DEMD8q1LYJ1riJQga0s+PfSCzzNZezC3LOy8XixpiN8LSAA3klBa5u7lz4I4enAaSpB7uGOvIs7dasMJn/c1QtcbrmGB+YrEc4YIMYXFAqKsYHcjQjgBATnBO5/8DZiQHoDg/9MsXnuvjIir4E6ORrzPhEhVZ0VnMlIdr09KX2owdcY/gOOpdG/J7te5G6VfiTyg26HE1cCAwEAAaNQME4wHQYDVR0OBBYEFE9oLDXBAEmvMXyYtMxnzmE1pnS5MB8GA1UdIwQYMBaAFE9oLDXBAEmvMXyYtMxnzmE1pnS5MAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQENBQADggECAF2EKYUkcAvwIg47wIOBvC8xurcYQwhXe9wcrIqvUz2ThNEJNDxIb0GAduAYrDF3Zulf76x3hVk9yXdF88yg61CFvY/AJJulWmpzTGc66OuyOge+oJL5aD5nwZ2SP4odgSuUyHa/luvUh2upkp8ax7u4Cvm5ZyiRXzrRLUNhL47qu7XsW1vQMVuMeNI9o4qpxxadwwx8sLVJAEvExcoDEe4oIYHUJ6rCmbopKRwoZ1n01CVY9yN6nSHeJWsX8R9UM1I6S32CKUyESj+3OM3oq32a4uUyfhEG+hJuGhfHNGb9lFkqXbInU0DfSA1dbLNAijCcz3XbLrm3drFU7JnJ7mkj -----END CERTIFICATE-----


# Requires Format PKCS#8   BEGIN PRIVATE KEY       
# If you have     PKCS#1   BEGIN RSA PRIVATE KEY  convert it by   openssl pkcs8 -topk8 -inform pem -nocrypt -in sp.rsa_key -outform pem -out sp.pem
onelogin.saml2.sp.privatekey = -----BEGIN PRIVATE KEY----- MIIEwQIBADANBgkqhkiG9w0BAQEFAASCBKswggSnAgEAAoIBAgCvQeNAl+YvbexkJ0pGB+rgFcso8wO/y0HEPUbRvxaCVNUDesMQmp08ovxg9Y2VKcymSWLHiSPlTuPUlJA/ZAYTBH0r/tjiwQbc2CUs0aCJM/yALjgofIlOZGE7oLDBVZ8T2e8wCDpa4Pz0MQwPyrUtgnWuIlCBrSz499ILPM1l7MLcs7LxeLGmI3wtIADeSUFrm7uXPgjh6cBpKkHu4Y68izt1qwwmf9zVC1xuuYYH5isRzhggxhcUCoqxgdyNCOAEBOcE7n/wNmJAegOD/0yxee6+MiKvgTo5GvM+ESFVnRWcyUh2vT0pfajB1xj+A46l0b8nu17kbpV+JPKDbocTVwIDAQABAoIBAUZIXARJZkxa/tPjVcvj3PNkigav/i7qKkOydzYiNbqqnoo4rwV3m9r3WdLgZpkNHD8LawuuGbEaBA/6TCa/zBfQUwpTt1KoKkJig/YHUyPyry4QWwERgFbptnydIoVF+veRDHTst8o+M/MRwE6M8j9/9AWTSUnX0xM8/wT2q0BWueS92P0bchaSg8twABN7idunJPuaV8IRyf1QiLyt1cs9PmyX6o8KjwXfggCZg6Sx80WhXzAUymkCagtOwFjaaGoLMxNqoEZx8ZZqR6aChIDoyZxC0Wg3lCVNbkxo5CK4USE4j3NXx9ilCw81CVtSQ1ztavYtuS8vdoWVflWJVHdxAoGBDfDxyMqmpCxnnytN69OyopNcCwuk08iH/PFXw/lYYhGHDnmcXZKsRUCOZB1kIjXmkLukkkTqPZ+9+vP2ToX+895fz0Hp47ILyX5fw1n3XJoMDTHyLh0pMnffyNUl987fZ67p8tsvPi886r4Shu7StHW2Wr/KNGmk/hy7k70Ov3UzAoGBDJI5qsVGXLRiov489bOSB4YqXweLEgeAsuYAcn4Sm8H+aaFtqP8d+FGL1dDXbF7UpcaopeQUedfqvK+RysXtBQ8R9he0cu7CeGqOYFbQ89tgTDc2BfVHQOxJzL8mQyXMi33DHo4jxiC4H/F+ZPoOwPzEVSgEpzUs7YjrQDz1VeFNAoGBBr1OBWWCPaeByH6kwraqitF2E5jja8Zrhyoc5Y5q3a3ffm3n24yGX0wgCeHzgF5SQfGUU2mhW30X2HOLxNYeNEJySr1wljSCYjwHi2a4oDmQTeixTP2n5s/wjSQNoMiPU45JZq/zHLq1Vj3gsv5NOhQVvbUtyTyxGG9HdtpUgNXlAoGBBzUKNLq3NU0Bw9qojmDuFrw3rJXBiIueoHI2zW00M/JLbrnrCdmBkC0IU4RRDUNs/MHhTIJvrs84OAccObmxwpW6QXGjtcTm32yPxfHgB/68vdVldpMBz9noEaeBQzv3gf2PEQSCxANcLIwiX7fxH3mLAhtYV5in8mLuJL0OFrd9AoGBCL6uafecae7uwG0UV5PdXV9sZ73hv+thQH6PAIPimsNRSdQlS1bpJe7YugHLSMeRoH1TGYigunpLF5y0wRa46Ag7HlD+6r2Hy9qvXRpa3lZ/fBvMhIpJew0rYRhBxkr7lL72Kblihvaqz8mibdzrS3qbeLpgA1RWcUgAPSHucNO7 -----END PRIVATE KEY-----

## Identity Provider Data that we want connect with our SP ##

# Identifier of the IdP entity  (must be a URI)
onelogin.saml2.idp.entityid = https://app.onelogin.com/saml/metadata/693843

# SSO endpoint info of the IdP. (Authentication Request protocol)
# URL Target of the IdP where the SP will send the Authentication Request Message
onelogin.saml2.idp.single_sign_on_service.url = https://entermedia-dev.onelogin.com/trust/saml2/http-post/sso/693843

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.idp.single_sign_on_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# SLO endpoint info of the IdP.
# URL Location of the IdP where the SP will send the SLO Request
onelogin.saml2.idp.single_logout_service.url = https://entermedia-dev.onelogin.com/trust/saml2/http-redirect/slo/693843

# Optional SLO Response endpoint info of the IdP.
# URL Location of the IdP where the SP will send the SLO Response. If left blank, same URL as onelogin.saml2.idp.single_logout_service.url will be used.
# Some IdPs use a separate URL for sending a logout request and response, use this property to set the separate response url
onelogin.saml2.idp.single_logout_service.response.url =

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.idp.single_logout_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Public x509 certificate of the IdP
#onelogin.saml2.idp.x509cert =



# Instead of use the whole x509cert you can use a fingerprint
# (openssl x509 -noout -fingerprint -in "idp.crt" to generate it,
# or add for example the -sha256 , -sha384 or -sha512 parameter)
#
# If a fingerprint is provided, then the certFingerprintAlgorithm is required in order to
# let the toolkit know which Algorithm was used. Possible values: sha1, sha256, sha384 or sha512
# 'sha1' is the default value.
onelogin.saml2.idp.certfingerprint = 8D:90:30:09:06:EC:6B:6C:4A:1C:5B:C6:20:8B:64:3B:2F:E0:CF:77
onelogin.saml2.idp.certfingerprint_algorithm = sha1


## Security settings ##

# Indicates that the nameID of the <samlp:logoutRequest> sent by this SP
# will be encrypted.
onelogin.saml2.security.nameid_encrypted = false

# Indicates whether the <samlp:AuthnRequest> messages sent by this SP
# will be signed.              [The Metadata of the SP will offer this info]
onelogin.saml2.security.authnrequest_signed = false

# Indicates whether the <samlp:logoutRequest> messages sent by this SP
# will be signed.
onelogin.saml2.security.logoutrequest_signed = false

# Indicates whether the <samlp:logoutResponse> messages sent by this SP
# will be signed.
onelogin.saml2.security.logoutresponse_signed = false

# Sign the Metadata
# Empty means no signature, or comma separate the keyFileName and the certFileName
onelogin.saml2.security.want_messages_signed = 

# Indicates a requirement for the <samlp:Response>, <samlp:LogoutRequest> and
# <samlp:LogoutResponse> elements received by this SP to be signed.
onelogin.saml2.security.want_assertions_signed = false

# Indicates a requirement for the Metadata of this SP to be signed.
# Right now supported null (in order to not sign) or true (sign using SP private key) 
onelogin.saml2.security.sign_metadata = 

# Indicates a requirement for the Assertions received by this SP to be encrypted
onelogin.saml2.security.want_assertions_encrypted = false

# Indicates a requirement for the NameID received by this SP to be encrypted
onelogin.saml2.security.want_nameid_encrypted = false

# Authentication context.
# Set Empty and no AuthContext will be sent in the AuthNRequest,
# Set comma separated values urn:oasis:names:tc:SAML:2.0:ac:classes:urn:oasis:names:tc:SAML:2.0:ac:classes:Password
onelogin.saml2.security.requested_authncontext = urn:oasis:names:tc:SAML:2.0:ac:classes:urn:oasis:names:tc:SAML:2.0:ac:classes:Password

# Allows the authn comparison parameter to be set, defaults to 'exact'
onelogin.saml2.security.onelogin.saml2.security.requested_authncontextcomparison = exact

# Indicates if the SP will validate all received xmls.
# (In order to validate the xml, 'strict' and 'wantXMLValidation' must be true).
onelogin.saml2.security.want_xml_validation = true

# Algorithm that the toolkit will use on signing process. Options:
#  'http://www.w3.org/2000/09/xmldsig#rsa-sha1'
#  'http://www.w3.org/2000/09/xmldsig#dsa-sha1'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha256'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha384'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha512'
onelogin.saml2.security.signature_algorithm = http://www.w3.org/2000/09/xmldsig#rsa-sha1

# Organization
onelogin.saml2.organization.name = SP Java 
onelogin.saml2.organization.displayname = SP Java Example
onelogin.saml2.organization.url = http://sp.example.com
onelogin.saml2.organization.lang = en

# Contacts
onelogin.saml2.contacts.technical.given_name = Technical Guy
onelogin.saml2.contacts.technical.email_address = technical@example.com
onelogin.saml2.contacts.support.given_name = Support Guy
onelogin.saml2.contacts.support.email_address = support@@example.com